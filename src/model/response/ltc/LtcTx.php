/**
 *
 * @export
 * @interface LtcTx
 */
class LtcTx extends Model {
    /**
     * Transaction hash.
* @var string
     * @memberof LtcTx
     */
    hash: string;
    /**
     * Witness hash in case of a SegWit transaction.
* @var string
     * @memberof LtcTx
     */
    witnessHash: string;
    /**
     * Fee paid for this transaction, in LTC.
* @var string
     * @memberof LtcTx
     */
    fee: string;
    /**
     *
* @var string
     * @memberof LtcTx
     */
    rate: string;
    /**
     *
* @var number
     * @memberof LtcTx
     */
    ps: number;
    /**
     * Height of the block this transaction belongs to.
* @var number
     * @memberof LtcTx
     */
    height: number;
    /**
     * Hash of the block this transaction belongs to.
* @var string
     * @memberof LtcTx
     */
    block: string;
    /**
     * Time of the transaction.
* @var number
     * @memberof LtcTx
     */
    ts: number;
    /**
     * Index of the transaction in the block.
* @var number
     * @memberof LtcTx
     */
    index: number;
    /**
     * Index of the transaction.
* @var number
     * @memberof LtcTx
     */
    version: number;
    /**
     *
* @var number
     * @memberof LtcTx
     */
    flag: number;
    /**
     *
* @var Array
<LtcTxInputs>
     * @memberof LtcTx
     */
    inputs: LtcTxInputs[];
    /**
     *
    * @var Array
    <LtcTxOutputs>
     * @memberof LtcTx
     */
    outputs: LtcTxOutputs[];
    /**
     * Block this transaction was included in.
        * @var number
     * @memberof LtcTx
     */
    locktime: number;
}

/**
 *
 * @export
 * @interface LtcTxCoin
 */
class LtcTxCoin extends Model {
    /**
     *
        * @var number
     * @memberof LtcTxCoin
     */
    version: number;
    /**
     *
        * @var number
     * @memberof LtcTxCoin
     */
    height: number;
    /**
     *
        * @var string
     * @memberof LtcTxCoin
     */
    value: string;
    /**
     *
        * @var string
     * @memberof LtcTxCoin
     */
    script: string;
    /**
     * Sender address.
        * @var string
     * @memberof LtcTxCoin
     */
    address: string;
    /**
     * Coinbase transaction - miner fee.
        * @var boolean
     * @memberof LtcTxCoin
     */
    coinbase: boolean;
}

/**
 *
 * @export
 * @interface LtcTxInputs
 */
class LtcTxInputs extends Model {
    /**
     *
        * @var LtcTxPrevout
     * @memberof LtcTxInputs
     */
    prevout: LtcTxPrevout;
    /**
     * Data generated by a spender which is almost always used as variables to satisfy a pubkey script.
        * @var string
     * @memberof LtcTxInputs
     */
    script: string;
    /**
     * Transaction witness.
        * @var string
     * @memberof LtcTxInputs
     */
    witness: string;
    /**
     *
        * @var number
     * @memberof LtcTxInputs
     */
    sequence: number;
    /**
     *
        * @var LtcTxCoin
     * @memberof LtcTxInputs
     */
    coin: LtcTxCoin;
}

/**
 *
 * @export
 * @interface LtcTxOutputs
 */
class LtcTxOutputs extends Model {
    /**
     * Sent amount in LTC.
        * @var string
     * @memberof LtcTxOutputs
     */
    value: string;
    /**
     * Transaction script.
        * @var string
     * @memberof LtcTxOutputs
     */
    script: string;
    /**
     * Recipient address.
        * @var string
     * @memberof LtcTxOutputs
     */
    address: string;
}

/**
 *
 * @export
 * @interface LtcTxPrevout
 */
class LtcTxPrevout extends Model {
    /**
     * Transaction hash of the input.
        * @var string
     * @memberof LtcTxPrevout
     */
    hash: string;
    /**
     * Transaction index of the input.
        * @var number
     * @memberof LtcTxPrevout
     */
    index: number;
}