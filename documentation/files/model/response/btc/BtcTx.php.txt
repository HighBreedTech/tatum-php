<?php

namespace Tatum\model\response\btc;


use Tatum\model\Model;

/**
 *
 * @export
 * @interface BtcTx
 */
class BtcTx extends Model
{
    /**
     * Transaction hash.
     * @var string
     * @memberof BtcTx
     */
    public $hash;
    /**
     * Witness hash in case of a SegWit transaction.
     * @var string
     * @memberof BtcTx
     */
    public $witnessHash;
    /**
     * Fee paid for this transaction, in satoshis.
     * @var number
     * @memberof BtcTx
     */
    public $fee;
    /**
     *
     * @var number
     * @memberof BtcTx
     */
    public $rate;
    /**
     *
     * @var number
     * @memberof BtcTx
     */
    public $mtime;
    /**
     * Height of the block this transaction belongs to.
     * @var number
     * @memberof BtcTx
     */
    public $height;
    /**
     * Hash of the block this transaction belongs to.
     * @var string
     * @memberof BtcTx
     */
    public $block;
    /**
     * Time of the transaction.
     * @var number
     * @memberof BtcTx
     */
    public $time;
    /**
     * Index of the transaction in the block.
     * @var number
     * @memberof BtcTx
     */
    public $index;
    /**
     * Index of the transaction.
     * @var number
     * @memberof BtcTx
     */
    public $version;
    /**
     *
     * @var Array
     * <BtcTxInputs>
     * @memberof BtcTx
     */
    public $inputs;
    /**
     *
     * @var Array
     * <BtcTxOutputs>
     * @memberof BtcTx
     */
    public $outputs;
    /**
     * Block this transaction was included in.
     * @var number
     * @memberof BtcTx
     */
    public $locktime;
}

/**
 *
 * @export
 * @interface BtcTxCoin
 */
class BtcTxCoin extends Model
{
    /**
     *
     * @var number
     * @memberof BtcTxCoin
     */
    public $version;
    /**
     *
     * @var number
     * @memberof BtcTxCoin
     */
    public $height;
    /**
     *
     * @var number
     * @memberof BtcTxCoin
     */
    public $value;
    /**
     *
     * @var string
     * @memberof BtcTxCoin
     */
    public $script;
    /**
     * Sender address.
     * @var string
     * @memberof BtcTxCoin
     */
    public $address;
    /**
     * Coinbase transaction - miner fee.
     * @var boolean
     * @memberof BtcTxCoin
     */
    public $coinbase;
}

/**
 *
 * @export
 * @interface BtcTxInputs
 */
class BtcTxInputs extends Model
{
    /**
     *
     * @var BtcTxPrevout
     * @memberof BtcTxInputs
     */
    public $prevout;
    /**
     * Data generated by a spender which is almost always used as variables to satisfy a pubkey script.
     * @var string
     * @memberof BtcTxInputs
     */
    public $script;
    /**
     * Transaction witness.
     * @var string
     * @memberof BtcTxInputs
     */
    public $witness;
    /**
     *
     * @var number
     * @memberof BtcTxInputs
     */
    public $sequence;
    /**
     *
     * @var BtcTxCoin
     * @memberof BtcTxInputs
     */
    public $coin;
}

/**
 *
 * @export
 * @interface BtcTxOutputs
 */
class BtcTxOutputs extends Model
{
    /**
     * Sent amount in satoshis.
     * @var number
     * @memberof BtcTxOutputs
     */
    public $value;
    /**
     * Transaction script.
     * @var string
     * @memberof BtcTxOutputs
     */
    public $script;
    /**
     * Recipient address.
     * @var string
     * @memberof BtcTxOutputs
     */
    public $address;
}

/**
 *
 * @export
 * @interface BtcTxPrevout
 */
class BtcTxPrevout extends Model
{
    /**
     * Transaction hash of the input.
     * @var string
     * @memberof BtcTxPrevout
     */
    public $hash;
    /**
     * Transaction index of the input.
     * @var number
     * @memberof BtcTxPrevout
     */
    public $index;
}
